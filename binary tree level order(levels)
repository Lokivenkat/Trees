102. Binary Tree Level Order Traversal
Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Example 1:
https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]
Example 2:

Input: root = [1]
Output: [[1]]
Example 3:

Input: root = []
Output: []

solution:
class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        queue=[]
        l=[]
        queue.append(root)
        if(root is None):
            return([])
        while(len(queue)!=0):
            n=len(queue)
            ans=[]
            for i  in range(n):
                root=queue.pop(0)
                if(root.left is not None):
                    queue.append(root.left)
                if(root.right is not None):
                    queue.append(root.right)
                ans.append(root.val)
            l.append(ans)
        return(l)
        
